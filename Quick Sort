// Quick Sort 

#include<bits/stdc++.h>
using namespace std;

int partition(int arr[], int s, int e) {
   int pivot = arr[s];

   int cnt = 0;
   for(int i=s+1; i<=e; i++) {
      if(arr[i] <= pivot) {
         cnt++;
      }
   }

   int pivotIndex = s+cnt;

   swap(arr[pivotIndex],arr[s]);

   // handling left and right part

   int i = s , j = e;

   while(i<pivotIndex && j>pivotIndex) {
      while(arr[i] <= pivot) {
         i++;
      }
      while(arr[j] > pivot) {
         j--;
      }
      if(i < pivotIndex && j > pivotIndex) {
         swap(arr[i],arr[j]);
         i++;
         j--;
      }
   }
   return pivotIndex;
}

void quickSort(int arr[], int s, int e) {
   if(s>=e) {
      return;
   }

   int pIndex = partition(arr, s, e);

   // left
   quickSort(arr, s, pIndex-1);

   // right
   quickSort(arr, pIndex+1, e);
}
int main() {
   int arr[] = {12, 11, 13, 5, 6, 7, 7, 7};
   int size = 8;
   quickSort(arr, 0, size-1);

   for(int i=0; i<size; i++) {
      cout << arr[i] << " ";
   }
   cout << endl;
return 0;
}
